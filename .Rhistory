library(reshape2)
mySum <- dcast(melted, c(sex,race) ~ variable, sum )
mySum
melted
mySum <- dcast(melted, race ~ variable, sum )
mySum
dcast(melted, age ~ variable, sum )
dcast(melted, sex ~ variable, sum )
melted[1]
melted[2]
dcast(melted, melted[1] ~ variable, sum )
dcast(melted, melted[1,] ~ variable, sum )
dcast(melted, melted[2,] ~ variable, sum )
dcast(melted, sex ~ variable, sum )
dcast(melted, race ~ variable, sum )
rm(mySum)
rm(data)
rm(melted)
rm(list)
data <- rbind(train_set,test_set)   #append training and test set into single data set
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,set_type cols, assign column names
data <- name_activities(data)
View(data)
tmp <- melt(data, id=c("subject","activity"))
head(tmp)
read_set <- function(set_type){
set_path <- paste0("./UCI HAR Dataset/",set_type,"/")
inertial_subdir <- "Inertial Signals/"
#define filenames for set_type: "train" or "test"
subjects <- paste0(set_path,"subject_",set_type,".txt")
X <- paste0(set_path,"X_",set_type,".txt")
y <- paste0(set_path,"y_",set_type,".txt")
#recursively define filenames for body_acc, body_gyro, total_acc inertial data over x,y,z axes
axes <- c("x","y","z")
inertial <- c("body_acc_","body_gyro_","total_acc_")
inertial_signals <- integer(0)
for(i in 1:3){
for (j in 1:3){
inertial_signals[3*(i-1)+j] <- paste0(set_path,inertial_subdir,inertial[i],axes[j],"_",set_type,".txt")
}
}
#readfiles into tables
subject <- read.table(subjects)
X <- read.table(X)
y <- read.table(y)
#readtables containing inertial signals
inertial_signals_table <- read.table(inertial_signals[1])
for(i in 2:9){
inertial_signals_table <- cbind(inertial_signals_table,read.table(inertial_signals[i]))
}
#merge tables into dataframe, add column defining set_type: "train" or "test"
#---Column order
#   1:561 -> X features
#   562:1713 -> inertial_signals
#   1714 -> set_type
#   1715 -> subject
#   1716 -> activity
data.frame(X,inertial_signals_table,subject,y)
}
select_meanstd <- function(dataset){
#load features names
file <- "./UCI HAR Dataset/features.txt"
features <- read.table(file)
#extract features containing mean() or std() measures
feat_vec <- features[grep("mean\\(\\)|std\\(\\)",features$V2),1]
feat_names <- features[grep("mean\\(\\)|std\\(\\)",features$V2),2]
#select for X features only columns of interest, preserve cols for subject,activity,set_type
dataset <- dataset[,c(feat_vec,c(1714:1716))]
n <- c(as.character(feat_names),"subject","activity")
colnames(dataset) <- n
dataset
}
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
dataset
}
train_set <- read_set("train")      #load training set
read_set <- function(set_type){
set_path <- paste0("./UCI HAR Dataset/",set_type,"/")
inertial_subdir <- "Inertial Signals/"
#define filenames for set_type: "train" or "test"
subjects <- paste0(set_path,"subject_",set_type,".txt")
X <- paste0(set_path,"X_",set_type,".txt")
y <- paste0(set_path,"y_",set_type,".txt")
#recursively define filenames for body_acc, body_gyro, total_acc inertial data over x,y,z axes
axes <- c("x","y","z")
inertial <- c("body_acc_","body_gyro_","total_acc_")
inertial_signals <- integer(0)
for(i in 1:3){
for (j in 1:3){
inertial_signals[3*(i-1)+j] <- paste0(set_path,inertial_subdir,inertial[i],axes[j],"_",set_type,".txt")
}
}
#readfiles into tables
subject <- read.table(subjects)
X <- read.table(X)
y <- read.table(y)
#readtables containing inertial signals
inertial_signals_table <- read.table(inertial_signals[1])
for(i in 2:9){
inertial_signals_table <- cbind(inertial_signals_table,read.table(inertial_signals[i]))
}
#merge tables into dataframe, add column defining set_type: "train" or "test"
#---Column order
#   1:561 -> X features
#   562:1713 -> inertial_signals
#   1714 -> set_type
#   1715 -> subject
#   1716 -> activity
data.frame(X,inertial_signals_table,subject,y)
}
select_meanstd <- function(dataset){
#load features names
file <- "./UCI HAR Dataset/features.txt"
features <- read.table(file)
#extract features containing mean() or std() measures
feat_vec <- features[grep("mean\\(\\)|std\\(\\)",features$V2),1]
feat_names <- features[grep("mean\\(\\)|std\\(\\)",features$V2),2]
#select for X features only columns of interest, preserve cols for subject,activity,set_type
dataset <- dataset[,c(feat_vec,c(1714:1716))]
n <- c(as.character(feat_names),"subject","activity")
colnames(dataset) <- n
dataset
}
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
dataset
}
train_set <- read_set("train")      #load training set
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
#drop activity_id column
dataset <- dataset[,-"activity_id"]
}
test_set <- read_set("test")        #load test set
data <- rbind(train_set,test_set)   #append training and test set into single data set
#Step 2
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,set_type cols, assign column names
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,set_type cols, assign column names
select_meanstd <- function(dataset){
#load features names
file <- "./UCI HAR Dataset/features.txt"
features <- read.table(file)
#extract features containing mean() or std() measures
feat_vec <- features[grep("mean\\(\\)|std\\(\\)",features$V2),1]
feat_names <- features[grep("mean\\(\\)|std\\(\\)",features$V2),2]
#select for X features only columns of interest, preserve cols for subject,activity,set_type
dataset <- dataset[,c(feat_vec,c(1714:1715))]
n <- c(as.character(feat_names),"subject","activity")
colnames(dataset) <- n
dataset
}
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,set_type cols, assign column names
#Step 3
data <- name_activities(data)
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
#drop activity_id column
dataset <- dataset[,-1]
}
data <- name_activities(data)
View(data)
data$activity
as.numeric(data$activity)
data <- rbind(train_set,test_set)   #append training and test set into single data set
#Step 2
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,assign column names
#Step 3
data <- name_activities(data)
View(data)
data <- rbind(train_set,test_set)   #append training and test set into single data set
#Step 2
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,assign column names
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
}
data <- name_activities(data)
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
dataset
}
data <- rbind(train_set,test_set)   #append training and test set into single data set
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,assign column names
data <- name_activities(data)
View(data)
unique(data$activity_id,dat$activity$name)
unique(data$activity_id,data$activity$name)
unique(data$activity_id,data$activity)
unique(data$activity_id)
unique(data$activity)
sex <- gl(2,5,10,c("Male","Female"))
sex
unclass(sex)
levels(sex)
levels(sex) <- c("Male","Female")
sex
unclass(sex)
levels(sex) <- c("Female","Male")
unclass(sex)
sex
sex <- gl(1,5,10,c("Male","Female"))
sex
sex <- gl(2,1,10,c("Male","Female"))
sex
levels(sex) <- c("Female","Male")
sex
View(data)
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
activities_labels
activities_labels$V2
levels(activities_labels$V2)
levels(data$activity)
unclass(levels(data$activity))
data$act
data$activity
unclass(data$activity)
activities_labels
activities_labels$V2
order(activities_labels$V1)
activities_labels[order(activities_labels$V1)]
activities_labels$V2[order(activities_labels$V1)]
lev <- activities_labels$V2[order(activities_labels$V1)]
lev
unclass(lev)
unclass(lev)
lev
leels(lev)
levels(lev)
activities_labels
activities_labels$V2
activities_labels$V2[order(activities_labels$V1)]
list(activities_labels$V2[order(activities_labels$V1)])
as.character(activities_labels$V2[order(activities_labels$V1)])
lev <- as.character(activities_labels$V2[order(activities_labels$V1)])
lev
activities_labels$V2
levels(activities_labels$V2) <- lev
activities_labels
activities_labels$V2
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
lev <- as.character(activities_labels$V2[order(activities_labels$V1)])
lev
activities_labels$V2 <- factor(activities_labels$V2, levels=lev)
activities_labels
activities_labels$V2
data$activity
clean_levels <- function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
lev <- as.character(activities_labels$V2[order(activities_labels$V1)])
dataset$activity <- factor(dataset$activity, levels=lev)
}
data$activity
small_data <- clean_levels(data)
clean_levels <- function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
lev <- as.character(activities_labels$V2[order(activities_labels$V1)])
dataset$activity <- factor(dataset$activity, levels=lev)
dataset
}
small_data <- clean_levels(data)
small_data$activity
levels(data$activity)
levels(data_small$activity)
levels(small_data$activity)
View(small_data)
View(data)
View(small_data)
update_levels <- function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
lev <- as.character(activities_labels$V2[order(activities_labels$V1)])
dataset$activity <- factor(dataset$activity, levels=lev)
#drop unnencessary activity_id column
dataset[,-1]
}
data <- update_levels(data)         #redefine levels for activity
View(data)
read_set <- function(set_type){
set_path <- paste0("./UCI HAR Dataset/",set_type,"/")
inertial_subdir <- "Inertial Signals/"
#define filenames for set_type: "train" or "test"
subjects <- paste0(set_path,"subject_",set_type,".txt")
X <- paste0(set_path,"X_",set_type,".txt")
y <- paste0(set_path,"y_",set_type,".txt")
#recursively define filenames for body_acc, body_gyro, total_acc inertial data over x,y,z axes
axes <- c("x","y","z")
inertial <- c("body_acc_","body_gyro_","total_acc_")
inertial_signals <- integer(0)
for(i in 1:3){
for (j in 1:3){
inertial_signals[3*(i-1)+j] <- paste0(set_path,inertial_subdir,inertial[i],axes[j],"_",set_type,".txt")
}
}
#readfiles into tables
subject <- read.table(subjects)
X <- read.table(X)
y <- read.table(y)
#readtables containing inertial signals
inertial_signals_table <- read.table(inertial_signals[1])
for(i in 2:9){
inertial_signals_table <- cbind(inertial_signals_table,read.table(inertial_signals[i]))
}
#merge tables into dataframe, add column defining set_type: "train" or "test"
#---Column order
#   1:561 -> X features
#   562:1713 -> inertial_signals
#   1714 -> set_type
#   1715 -> subject
#   1716 -> activity
data.frame(X,inertial_signals_table,subject,y)
}
select_meanstd <- function(dataset){
#load features names
file <- "./UCI HAR Dataset/features.txt"
features <- read.table(file)
#extract features containing mean() or std() measures
feat_vec <- features[grep("mean\\(\\)|std\\(\\)",features$V2),1]
feat_names <- features[grep("mean\\(\\)|std\\(\\)",features$V2),2]
#select for X features only columns of interest, preserve cols for subject,activity,set_type
dataset <- dataset[,c(feat_vec,c(1714:1715))]
n <- c(as.character(feat_names),"subject","activity")
colnames(dataset) <- n
dataset
}
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
dataset
}
update_levels <- function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
lev <- as.character(activities_labels$V2[order(activities_labels$V1)])
dataset$activity <- factor(dataset$activity, levels=lev)
#drop unnencessary activity_id column
dataset[,-1]
}
#Step 1
train_set <- read_set("train")      #load training set
test_set <- read_set("test")        #load test set
data <- rbind(train_set,test_set)   #append training and test set into single data set
#Step 2
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,assign column names
#Step 3
data <- name_activities(data)       #import activity labels
#Step 4
data <- update_levels(data)         #redefine levels for activity
View(data)
View(data)
tmp <- melt(data, id=c("subject","activity")
)
head(tmp)
a <- dcast(tmp, c("subject","activity"),mean)
a <- dcast(tmp, c("subject","activity")  ~ variable,mean)
a
View(a)
a <- dcast(tmp, c(subject,activity)  ~ variable,mean)
View(a)
a <- dcast(tmp, subject,activity  ~ variable,mean)
a <- dcast(tmp, subject ~ variable,mean)
View(a)
a <- dcast(tmp, activity ~ variable,mean)
View(a)
a <- dcast(tmp, subject+activity ~ variable,mean)
View(a)
rm(tmp)
rm(a)
melted <- melt(data, id=c("subject","activity"))
data2 <- dcast(melted, subject+activity ~ variable,mean)
read_set <- function(set_type){
set_path <- paste0("./UCI HAR Dataset/",set_type,"/")
inertial_subdir <- "Inertial Signals/"
#define filenames for set_type: "train" or "test"
subjects <- paste0(set_path,"subject_",set_type,".txt")
X <- paste0(set_path,"X_",set_type,".txt")
y <- paste0(set_path,"y_",set_type,".txt")
#recursively define filenames for body_acc, body_gyro, total_acc inertial data over x,y,z axes
axes <- c("x","y","z")
inertial <- c("body_acc_","body_gyro_","total_acc_")
inertial_signals <- integer(0)
for(i in 1:3){
for (j in 1:3){
inertial_signals[3*(i-1)+j] <- paste0(set_path,inertial_subdir,inertial[i],axes[j],"_",set_type,".txt")
}
}
#readfiles into tables
subject <- read.table(subjects)
X <- read.table(X)
y <- read.table(y)
#readtables containing inertial signals
inertial_signals_table <- read.table(inertial_signals[1])
for(i in 2:9){
inertial_signals_table <- cbind(inertial_signals_table,read.table(inertial_signals[i]))
}
#merge tables into dataframe, add column defining set_type: "train" or "test"
#---Column order
#   1:561 -> X features
#   562:1713 -> inertial_signals
#   1714 -> set_type
#   1715 -> subject
#   1716 -> activity
data.frame(X,inertial_signals_table,subject,y)
}
select_meanstd <- function(dataset){
#load features names
file <- "./UCI HAR Dataset/features.txt"
features <- read.table(file)
#extract features containing mean() or std() measures
feat_vec <- features[grep("mean\\(\\)|std\\(\\)",features$V2),1]
feat_names <- features[grep("mean\\(\\)|std\\(\\)",features$V2),2]
#select for X features only columns of interest, preserve cols for subject,activity,set_type
dataset <- dataset[,c(feat_vec,c(1714:1715))]
n <- c(as.character(feat_names),"subject","activity")
colnames(dataset) <- n
dataset
}
name_activities <-function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
#merge id with labels table
dataset <- merge(activities_labels,data, by.x="V1", by.y="activity")
#set column names
colnames(dataset)[1:2] <- c("activity_id","activity")
dataset
}
update_levels <- function(dataset){
#load activity labels
file <- "./UCI HAR Dataset/activity_labels.txt"
activities_labels <- read.table(file)
lev <- as.character(activities_labels$V2[order(activities_labels$V1)])
dataset$activity <- factor(dataset$activity, levels=lev)
#drop unnencessary activity_id column
dataset[,-1]
}
reshape_dataset(dataset){
melted <- melt(dataset, id=c("subject","activity"))
dcast(melted, subject+activity ~ variable,mean)
}
reshape_dataset(dataset){
melted <- melt(dataset, id=c("subject","activity"))
dcast(melted, subject+activity ~ variable,mean)
}
reshape_dataset(dataset){
melted <- melt(dataset, id=c("subject","activity"))
dcast(melted, subject+activity ~ variable,mean)
}
reshape_dataset <- function(dataset){
melted <- melt(dataset, id=c("subject","activity"))
dcast(melted, subject+activity ~ variable,mean)
}
#Step 1
train_set <- read_set("train")      #load training set
test_set <- read_set("test")        #load test set
data <- rbind(train_set,test_set)   #append training and test set into single data set
#Step 2
data <- select_meanstd(data)        #select mean and std columns, keep subject,activity,assign column names
#Step 3
data <- name_activities(data)       #import activity labels
#Step 4
data <- update_levels(data)         #redefine levels for activity
average_data <- reshape_dataset(data)    #average and levels for activity
View(average_data)
